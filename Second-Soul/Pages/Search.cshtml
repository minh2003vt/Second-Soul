@page
@model Second_Soul.Pages.SearchModel
@{
	ViewData["Title"] = "Search Results";
}

<h2>Search Results for "@Model.Query"</h2>

<form method="get">
	<div class="form-group">
		<label for="query">Search</label>
		<input type="text" name="query" class="form-control" value="@Model.Query" placeholder="Search products..." />
	</div>

	<div class="form-group">
		<label for="minPrice">Min Price</label>
		<input type="number" name="minPrice" class="form-control" value="@Model.MinPrice" placeholder="Min Price" />
	</div>

	<div class="form-group">
		<label for="maxPrice">Max Price</label>
		<input type="number" name="maxPrice" class="form-control" value="@Model.MaxPrice" placeholder="Max Price" />
	</div>
	@if (Model.Categories.Count > 0)
	{
		<div class="form-group">
			<label for="categoryIDs">Category</label>
			@Html.DropDownList("categoryIDs", Model.Categories, "Select Categories", new { @class = "form-control", multiple = "multiple" })
		</div>

	}

	@if (Model.Conditions.Count > 0)
	{
		<div class="form-group">
			<label for="condition">Condition</label>
			@Html.DropDownList("condition", Model.Conditions, "Select Condition", new { @class = "form-control" })
		</div>
	}

	<div class="form-group">
		<label for="sellerID">Seller ID</label>
		<input type="number" name="sellerID" class="form-control" value="@Model.SellerID" placeholder="Seller ID" />
	</div>

	<div class="form-group">
		<label for="isAvailable">Available</label>
		<input type="checkbox" name="isAvailable" @(Model.IsAvailable == true ? "checked" : "") />
	</div>

	<button type="submit" class="btn btn-primary">Search</button>
</form>

<h3>Results</h3>
<ul>
	@if (Model.Products.Any())
	{
		foreach (var product in Model.Products)
		{
			<li>@product.Name - @product.Price</li>
		}
	}
	else
	{
		<li>No products found.</li>
	}
</ul>

 <!-- Pagination Controls -->
<nav aria-label="Page navigation">
	<ul class="pagination">
		@if (Model.HasPreviousPage)
		{
			<li class="page-item">
				<a class="page-link" asp-route-query="@Model.Query" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
			</li>
		}

		@for (var i = 1; i <= Model.TotalPages; i++)
		{
			<li class="page-item @(i == Model.PageIndex ? "active" : "")">
				<a class="page-link" asp-route-query="@Model.Query" asp-route-pageIndex="@i">@i</a>
			</li>
		}

		@if (Model.HasNextPage)
		{
			<li class="page-item">
				<a class="page-link" asp-route-query="@Model.Query" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
			</li>
		}
	</ul>
</nav>
