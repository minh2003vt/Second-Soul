@page
@model Second_Soul.Pages.OrderPage.IndexModel
@{
}
<style>
    .remove-icon {
        color: #e74c3c;
        cursor: pointer;
        font-size: 18px;
        margin-left: 10px;
    }

    .product-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #ddd;
        padding: 10px 0;
    }

    body {
        font-family: Arial, sans-serif;
    }

    header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        background-color: #fff;
        border-bottom: 1px solid #ddd;
    }

    .logo {
        font-size: 24px;
        color: #E6455E;
        font-weight: bold;
    }

    .nav-icons {
        display: flex;
        align-items: center;
    }

        .nav-icons img {
            margin: 0 10px;
            cursor: pointer;
        }

    .container {
        display: flex;
        justify-content: space-between;
        padding: 20px;
    }

    .shipping-info, .payment-info {
        width: 48%;
    }

    .section-title {
        font-size: 20px;
        color: #E6455E;
        margin-bottom: 20px;
    }

    .input-group {
        margin-bottom: 15px;
    }

    input, select, textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
    }

    textarea {
        resize: none;
        height: 80px;
    }

    .payment-methods {
        margin-bottom: 15px;
    }

    .voucher {
        margin-bottom: 20px;
    }

        .voucher input {
            width: calc(100% - 10px);
            padding: 10px;
            border: 1px solid #E6455E;
            border-radius: 5px;
        }

    .summary {
        text-align: right;
        margin-top: 20px;
    }

    .total-price {
        font-size: 24px;
        font-weight: bold;
        color: #E6455E;
    }

    .order-button {
        background-color: #E6455E;
        color: #fff;
        padding: 15px;
        border: none;
        border-radius: 5px;
        width: 100%;
        font-size: 18px;
        cursor: pointer;
    }
</style>
<body>
    <div class="container">
        <div class="shipping-info">
            <div class="section-title">Thông tin nhận hàng</div>

            <!-- Pre-filled with logged-in user's data but editable -->
            <div class="input-group">
                <label>Email</label>
                <input type="email" value="@Model.User.Email" readonly />
            </div>

            <div class="input-group">
                <label>Tên</label>
                <input type="text" value="@Model.User.Username" readonly />
            </div>
            <div class="input-group">
                <label>Số điện thoại</label>
                <input type="text" asp-for="Order.PhoneNumber" value="@Model.User.PhoneNumber" />
            </div>

            <div class="input-group">
                <label>Địa chỉ</label>
                <input type="text" asp-for="Order.Address" value="@Model.User.Address"/>
            </div>
            <div class="input-group">
                <label>Ghi chú (tuỳ chọn)</label>
                <textarea asp-for="@Model.Order.Descriptions" placeholder="Ghi chú (tuỳ chọn)"></textarea>
            </div>

            <!-- Save button for updating address and phone number -->
            <button type="submit" formaction="/OrderPage/SaveDetails" class="save-button">Lưu thông tin</button>
        </div>
    </div>
    <div class="payment-info">
        <div class="section-title">Thanh toán</div>
        <div class="product-details">
            <div class="section-title">Chi tiết sản phẩm</div>
            @if (Model.Products != null && Model.Products.Any())
            {
                <div class="product-list" id="product-list">
                    @foreach (var product in Model.Products)
                    {
                        <div class="product-item" id="@product.ProductId">
                            <div>
                                <h3>@product.Name</h3>
                                <p>Giá: @product.Price.ToString("C")</p>
                            </div>
                            <!-- Remove button -->
                            <span class="remove-icon" onclick="removeProduct(@product.ProductId)">
                                ❌
                            </span>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>Giỏ hàng của bạn đang trống.</p>
            }
        </div>
    </div>

    <div class="summary">
        <div>Tổng tiền hàng: @Model.Total.ToString("N0") VND</div>
        <div>Phí vận chuyển: 30.000 VND</div>
        @{
            int shippingFee = 30000; 
            int totalPayment = Model.Total + shippingFee; 
        }
        <div class="total-price">Tổng thanh toán: @totalPayment.ToString("N0") VND</div>
        <button type="submit" class="order-button">Đặt hàng</button>
    </div>
    <script>
        async function removeProduct(productId) {
            try {
                const response = await fetch(`/OrderPage/RemoveProduct?productId=${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });

                if (!response.ok) throw new Error('Failed to remove product.');

                const result = await response.json();

                // Remove product from DOM
                const productElement = document.getElementById(`product-${productId}`);
                productElement.remove();

                // Update total amounts
                document.getElementById('total-product-amount').textContent = result.totalProductAmount.toLocaleString('en-US', { style: 'currency', currency: 'VND' });
                document.getElementById('total-amount').textContent = (result.totalProductAmount + 30000).toLocaleString('en-US', { style: 'currency', currency: 'VND' });
            } catch (error) {
                console.error('Error:', error);
            }
        }
    </script>

</body>
