@page
@model Second_Soul.Pages.CategoryPage.IndexCategoryModel
@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center text-success-title">All Categorys</h1>
<hr />


<div class="row mb-3">
    <div class="col-md-9">
        <form method="get" asp-page="./Category">
            <div class="row">
                <div class="col-md-2">
                    <input type="text" class="form-control" placeholder="Search by id" name="SearchId" value="@Model.SearchId">
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" placeholder="Search by name" name="SearchName" value="@Model.SearchName">
                </div>
                <div class="col-md-2">
                    <input type="text" class="form-control" placeholder="Search by parent id" name="SearchByParentId" value="@Model.SearchId">
                </div>
                <div class="col-md-2">
                    <button class="btn btn-primary rounded" type="submit">Search</button>
                </div>
            </div>
        </form>
    </div>

    <div class="col-md-3 text-end">
        <a asp-page="CreateCategory" class="btn btn-primary">Add Category</a>
    </div>
</div>



<table class="table table-bordered">
    <thead>
        <tr class="txt text-border">
            <th>
                @Html.DisplayNameFor(model => model.Cate[0].CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cate[0].CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cate[0].ParentCategory)
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Cate)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentCategory)
                </td>

                <td>
                    <div class="action-icons">
                        <a asp-page="./EditCategory" asp-route-id="@item.CategoryId" class="text-primary">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a asp-page="./DetailsCategory" asp-route-id="@item.CategoryId" class="text-success">
                            <i class="bi bi-eye"></i>
                        </a>
                        <a asp-page="./DeleteCategory" asp-route-id="@item.CategoryId" class="text-danger">
                            <i class="bi bi-trash"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-end">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="./IndexCategory" asp-route-currentPage="@(Model.CurrentPage - 1)" asp-route-searchId="@Model.SearchId" asp-route-searchName="@Model.SearchName" asp-route-searchBySchoolName="@Model.SearchId">&laquo;</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link rounded-circle" asp-page="./IndexCategory" asp-route-currentPage="@i" asp-route-searchId="@Model.SearchId" asp-route-searchName="@Model.SearchName" asp-route-searchBySchoolName="@Model.SearchId">@i</a>
            </li>
        }
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="./IndexCategory" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-searchId="@Model.SearchId" asp-route-searchName="@Model.SearchName" asp-route-searchBySchoolName="@Model.SearchId">&raquo;</a>
        </li>
    </ul>
</nav>

@* @if (!Model.IsIdFound && Model.SearchId.HasValue)
{
    <div class="alert alert-danger" role="alert">
        Can't find this ID, please try again!
    </div>
} *@

@if (!Model.IsDataFound)
{
    <div class="alert alert-warning" role="alert">
        No data found. Please try different search criteria.
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
}


