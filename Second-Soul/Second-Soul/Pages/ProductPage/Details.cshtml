@page "{id:int}"
@model Second_Soul.Pages.ProductPage.DetailsModel
@{
}
<div class="product-container">
	<div class="product-details">
		<div class="image-gallery">
			@if (Model.Images.Count == 0)
			{
				<div class="placeholder-frame">
					No Image Available
				</div>
			}
			else
			{
				<div class="thumbnail-list">
					<img src="@Model.Images.First().ImageUrl" alt="@Model.Product.Name" class="main-image">
				</div>
			}
		</div>
		<div class="info">
			<h1>@Model.Product.Name</h1>
			<p>@Model.Product.Condition • @Model.Product.Category.CategoryName</p>
			<p class="price">@Model.Product.Price đ</p>
			<p><strong>Address: </strong>@Model.Product.Seller.Address</p>
			<p><strong>Upload at: </strong>@Model.Product.AddedDate</p>
			<form method="post">
				<input type="hidden" name="id" value="@Model.Product.ProductId" />
				<button id="addToCartButton" type="submit" name="action" value="addToCart" class="btn-add-to-cart">Add to Cart</button>
				<button type="submit" name="action" value="buyNow" class="btn-buy-now">Buy Now</button>
			</form>
			<div class="seller-info">
				<h3>@Model.Product.Seller.Username</h3>
				<p>Phản hồi: 75% • 103 đã bán</p>
				<p><strong>Hoạt động:</strong> 2 giờ trước</p>
				<p>Đánh giá: <span class="rating">4.6 ★</span> (5 đánh giá)</p>
			</div>
		</div>
	</div>
	<div class="description-container">
		<h2>Description</h2>
		<p>
			@Model.Product.Description
		</p>
	</div>
</div>
<div id="addToCartModal" class="modal">
	<div class="modal-content">
		<div class="checkmark">
			&#10003;
		</div>
		<p>Item has been added to your shopping cart</p>
	</div>
</div>
<script>
	function showAddToCartModal() {
		var modal = document.getElementById("addToCartModal");
		modal.style.display = "flex";

		// Hide modal after 3 seconds
		setTimeout(function () {
			modal.style.display = "none";
		}, 3000);
	}

	document.getElementById("addToCartButton").addEventListener("click", function () {
		showAddToCartModal();
	});
</script>
<style>
	.product-container {
		display: flex;
		flex-direction: column;
		width: 70%;
		margin: 40px auto; /* Added top and bottom margins */
		font-family: Arial, sans-serif;
		padding: 20px; /* Added padding for better spacing */
		background-color: #fff; /* White background for contrast */
		border-radius: 10px; /* Rounded corners */
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
	}

	.product-details {
		display: flex;
		justify-content: space-between;
		margin-bottom: 20px; /* Space between product details and description */
	}

	.image-gallery {
		width: 45%;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.main-image {
		max-width: 100%; /* Limit width to prevent skewing */
		max-height: 300px; /* Set a max height */
		height: auto; /* Maintain aspect ratio */
	}

	.info {
		width: 50%;
		margin-left: 20px;
	}

	.description-container {
		margin-top: 20px;
		padding: 15px;
		border: 1px solid #ddd;
		border-radius: 5px;
		background-color: #f9f9f9; /* Light background for contrast */
	}

	.btn-add-to-cart, .btn-buy-now {
		padding: 10px;
		margin-right: 10px;
		background-color: #28a745;
		color: white;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		margin-top: 10px;
		transition: background-color 0.3s; /* Smooth transition for hover effect */
	}

		.btn-add-to-cart:hover {
			background-color: #0056b3; /* Darker blue on hover */
		}

		.btn-buy-now:hover {
			background-color: #e0a800; /* Darker yellow on hover */
		}

	.seller-info {
		margin-top: 20px;
		padding: 15px;
		border: 1px solid #ddd;
		border-radius: 5px;
		background-color: #f9f9f9; /* Light background for seller info */
	}
</style>
